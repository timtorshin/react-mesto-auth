{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  } //   editProfileInfo(inputData) {\n  //     return fetch(`${this._url}/users/me`, {\n  //       method: \"PATCH\",\n  //       headers: this._headers,\n  //       body: JSON.stringify({\n  //         name: inputData.name,\n  //         about: inputData.description,\n  //       }),\n  //     }).then(this._checkResponse);\n  //   }\n\n\n  editProfileInfo(name, a) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        about: inputData.description\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(inputData) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        link: inputData.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(inputData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputData.link\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: 'b64fa093-d6bd-41e5-84d7-c528a8e6ffa0',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"sources":["/Users/timofeitorshin/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getData","all","getUserData","getInitialCards","fetch","then","editProfileInfo","name","a","method","body","JSON","stringify","inputData","about","description","addNewCard","link","removeCard","cardId","putLike","deleteLike","updateAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n//   editProfileInfo(inputData) {\n//     return fetch(`${this._url}/users/me`, {\n//       method: \"PATCH\",\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         name: inputData.name,\n//         about: inputData.description,\n//       }),\n//     }).then(this._checkResponse);\n//   }\n\n   editProfileInfo(name, a) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        about: inputData.description,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(inputData) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        link: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  updateAvatar(inputData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: 'b64fa093-d6bd-41e5-84d7-c528a8e6ffa0',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport { api };\n"]},"metadata":{},"sourceType":"module"}