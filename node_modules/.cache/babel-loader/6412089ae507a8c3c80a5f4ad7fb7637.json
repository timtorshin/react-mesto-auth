{"ast":null,"code":"import _classCallCheck from\"/Users/timofeitorshin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/timofeitorshin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getData\",value:function getData(){return Promise.all([this.getUserData(),this.getInitialCards()]);}},{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"editProfileInfo\",value:function editProfileInfo(inputData){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:inputData.name,about:inputData.description})}).then(this._checkResponse);}},{key:\"addNewCard\",value:function addNewCard(inputData){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:inputData.name,link:inputData.link})}).then(this._checkResponse);}},{key:\"removeCard\",value:function removeCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"updateAvatar\",value:function updateAvatar(inputData){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:inputData.link})}).then(this._checkResponse);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-25',headers:{authorization:'b64fa093-d6bd-41e5-84d7-c528a8e6ffa0','Content-Type':'application/json'}});export{api};","map":{"version":3,"sources":["/Users/timofeitorshin/dev/mesto-react/src/utils/api.js"],"names":["Api","options","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","all","getUserData","getInitialCards","fetch","then","_checkResponse","inputData","method","body","JSON","stringify","name","about","description","link","cardId","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  editProfileInfo(inputData) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        about: inputData.description,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(inputData) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        link: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  updateAvatar(inputData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: 'b64fa093-d6bd-41e5-84d7-c528a8e6ffa0',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport { api };\n"]},"metadata":{},"sourceType":"module"}